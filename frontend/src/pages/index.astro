---
import { fetchHomePage } from '../lib/strapi';

let homePage = null;
let error = null;

try {
  homePage = await fetchHomePage();
} catch (e) {
  error = e.message;
}

const strapiUrl = import.meta.env.STRAPI_URL || 'http://localhost:1337';
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{homePage ? homePage.heading : "Personal Website"}</title>
	</head>
	<body>
		{error ? (
			<div class="error">
				<h1>Error loading content</h1>
				<p>{error}</p>
			</div>
		) : homePage ? (
			<div class="container">
				<header class="hero">
					<h1>{homePage.heading}</h1>
					<p class="about">{homePage.aboutBlurb}</p>
				</header>

				{homePage.gallery && homePage.gallery.length > 0 && (
					<section class="gallery">
						<div class="gallery-grid">
							{homePage.gallery.map((image) => (
								<div class="gallery-item">
									<img 
										src={`${strapiUrl}${image.url}`} 
										alt={image.alternativeText || "Gallery image"}
										loading="lazy"
									/>
								</div>
							))}
						</div>
					</section>
				)}

				<footer>
					<p>Built with <strong>Astro</strong> âš¡ and <strong>Strapi</strong> ðŸš€</p>
				</footer>
			</div>
		) : (
			<div class="loading">
				<h1>Loading...</h1>
			</div>
		)}

		<style>
			body {
				font-family: system-ui, sans-serif;
				margin: 0;
				padding: 0;
				line-height: 1.6;
				color: #333;
				background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
				min-height: 100vh;
			}

			.container {
				max-width: 1200px;
				margin: 0 auto;
				padding: 2rem;
				background: white;
				min-height: 100vh;
				box-shadow: 0 0 50px rgba(0,0,0,0.1);
			}

			.hero {
				text-align: center;
				padding: 4rem 0;
				border-bottom: 2px solid #f0f0f0;
				margin-bottom: 3rem;
			}

			.hero h1 {
				font-size: 3.5rem;
				margin-bottom: 1.5rem;
				background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
				-webkit-background-clip: text;
				-webkit-text-fill-color: transparent;
				background-clip: text;
			}

			.about {
				font-size: 1.2rem;
				max-width: 800px;
				margin: 0 auto;
				color: #555;
				line-height: 1.7;
			}

			.gallery {
				margin-bottom: 4rem;
			}

			.gallery-grid {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
				gap: 2rem;
				padding: 0 2rem;
			}

			.gallery-item {
				border-radius: 12px;
				overflow: hidden;
				box-shadow: 0 4px 20px rgba(0,0,0,0.1);
				transition: transform 0.3s ease, box-shadow 0.3s ease;
			}

			.gallery-item:hover {
				transform: translateY(-5px);
				box-shadow: 0 8px 30px rgba(0,0,0,0.15);
			}

			.gallery-item img {
				width: 100%;
				height: 250px;
				object-fit: cover;
				display: block;
			}

			.error, .loading {
				text-align: center;
				padding: 4rem 2rem;
				min-height: 100vh;
				display: flex;
				flex-direction: column;
				justify-content: center;
				align-items: center;
				background: white;
			}

			.error h1, .loading h1 {
				font-size: 2.5rem;
				margin-bottom: 1rem;
				color: #333;
			}

			.error p {
				color: #666;
				font-size: 1.1rem;
			}

			footer {
				text-align: center;
				padding: 2rem 0;
				border-top: 2px solid #f0f0f0;
				margin-top: 3rem;
				color: #666;
				font-size: 1.1rem;
			}

			footer strong {
				color: #333;
			}

			@media (max-width: 768px) {
				.container {
					padding: 1rem;
				}

				.hero {
					padding: 2rem 0;
				}

				.hero h1 {
					font-size: 2.5rem;
				}

				.about {
					font-size: 1.1rem;
				}

				.gallery-grid {
					grid-template-columns: 1fr;
					padding: 0;
				}

				.gallery-item img {
					height: 200px;
				}
			}
		</style>
	</body>
</html>
